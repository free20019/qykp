package mvc.service;

import helper.JacksonUtil;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Service;
import org.springframework.web.bind.annotation.RequestParam;

import com.mysql.jdbc.JDBC4Connection;
import com.mysql.jdbc.JDBC4MySQLConnection;

@Service
public class CommonService {

	protected JdbcTemplate jdbcTemplate = null;
	protected JdbcTemplate jdbcTemplate2 = null;

	public JdbcTemplate getJdbcTemplate() {
		return jdbcTemplate;
	}

	@Autowired
	public void setJdbcTemplate(JdbcTemplate jdbcTemplate) {
		this.jdbcTemplate = jdbcTemplate;
	}

	public JdbcTemplate getJdbcTemplate2() {
		return jdbcTemplate2;
	}

	@Autowired
	public void setJdbcTemplate2(JdbcTemplate jdbcTemplate2) {
		this.jdbcTemplate2 = jdbcTemplate2;
	}

	private JacksonUtil jacksonUtil = JacksonUtil.buildNormalBinder();

	public String test() {
		System.out.println(jdbcTemplate);
		System.out.println(jdbcTemplate2);

		return "ok";
	}

	public String part(String gw, String currentpage, String totalnum) {
		String sql = "select * from (select t.*,rownum r from tb_gw t where gw like '%"+gw+"%') tt where tt.r<="+ (Integer.parseInt(currentpage) * Integer.parseInt(totalnum)) + " and tt.r>="+(Integer.parseInt(currentpage) - 1) * Integer.parseInt(totalnum);
		String sql2= "select count(*) count from tb_gw t where gw like '%"+gw+"%' order by t.gw";
		//		System.out.println(sql);
		//		System.out.println(sql2);
		List<Map<String, Object>> list = jdbcTemplate.queryForList(sql);
		List<Map<String, Object>> list2 = jdbcTemplate.queryForList(sql2);
		List<Object> newList = new ArrayList<Object>();
		for(int i=0;i<list.size();i++){
			Map<String, Object> map1 = list.get(i);
			map1.put("QXID", list.get(i).get("QX").toString());
			String[] qxid = list.get(i).get("QX").toString().split(",");
			String arr="";			
			for(int j=0;j<qxid.length;j++){
				String sql1 = "select * from tb_qx where id = '"+qxid[j]+"'";
				List<Map<String, Object>> list1 = jdbcTemplate.queryForList(sql1);
				arr +=list1.get(0).get("NAME").toString()+",";
			}
			map1.put("QX", arr.substring(0,arr.length()-1));
			newList.add(map1);
		}
		Map<String, Object> m = new HashMap<String, Object>();
		m.put("datas", newList);
		m.put("count", list2.get(0).get("count"));
		//		System.out.println(m);
		return jacksonUtil.toJson(m);
	}

	public String tree() {
		String sql= "select * from tb_bm where parent is NULL";
		List<Map<String, Object>> list = jdbcTemplate.queryForList(sql);
		List<Object> newList = new ArrayList<Object>();
		for(int i=0;i<list.size();i++){
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("id", list.get(i).get("CODE"));
			map.put("pId","0");
			map.put("name", list.get(i).get("BM"));
			map.put("open", "true");
			newList.add(map);
			String sql1= "select * from tb_bm where parent ="+list.get(i).get("CODE");
			List<Map<String, Object>> list1 = jdbcTemplate.queryForList(sql1);
			for(int j=0;j<list1.size();j++){
				Map<String, Object> map1 = new HashMap<String, Object>();
				map1.put("id", list1.get(j).get("CODE"));
				map1.put("pId",list1.get(j).get("PARENT"));
				map1.put("name", list1.get(j).get("BM"));
				newList.add(map1);
			}
		}
		return jacksonUtil.toJson(newList);
	}

	public String qxtree() {
		String sql= "select * from tb_qx";
		List<Map<String, Object>> list = jdbcTemplate.queryForList(sql);
		List<Object> newList = new ArrayList<Object>();
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("id","0");
		map.put("pId","0");
		map.put("name","权限");
		map.put("open", "true");
		newList.add(map);
		for(int i=0;i<list.size();i++){
			Map<String, Object> map1 = new HashMap<String, Object>();
			map1.put("id", list.get(i).get("ID"));
			map1.put("pId","0");
			map1.put("name", list.get(i).get("NAME"));
			map1.put("open", "false");
			newList.add(map1);
		}
		return jacksonUtil.toJson(newList);
	}

	public int addsave(String mc, String id) {
		String sql = "insert into TB_GW (gw,qx) values ('"+mc+"','"+id+"')";
		//		System.out.println(sql);
		int count=jdbcTemplate.update(sql);
		return count;
	}

	public int del(String sj) {
		String[] id=sj.split(",");
		int count=0;
		for(int i=0;i<id.length;i++){
			String sql = "delete from TB_GW where id="+id[i];
			//			System.out.println(sql);
			count+=jdbcTemplate.update(sql);
		}
		return count;
	}

	public int editsave(String mc, String nr, String id) {
		String sql = "update TB_GW set gw="+mc+", qx="+nr+" where id ="+id;
		//		System.out.println(sql);
		int count=jdbcTemplate.update(sql);
		return count;
	}


	public int addsz(String bm, String longi, String lati, String sb,String xb, String fw) {
		String sqlcz = "select * from tb_sz t where t.bm='"+bm+"'";
		List<Map<String, Object>> list = jdbcTemplate.queryForList(sqlcz);
		String sbtime = sb.replaceAll(":", "")+"00";
		String xbtime = xb.replaceAll(":", "")+"00";
		String sql ="";
		if(list.size()==0){
			sql = "insert into tb_sz (sbtime,xbtime,fw,longi,lati,bm) values ('"+sbtime+"','"+xbtime+"','"+fw+"','"+longi+"','"+lati+"','"+bm+"')";
		}else{
			sql = "update tb_sz set sbtime='"+sbtime+"',xbtime='"+xbtime+"',fw='"+fw+"',longi='"+longi+"',lati='"+lati+"'where bm='"+bm+"'";
		}
		//System.out.println(sql);
		int count=jdbcTemplate.update(sql);
		return count;
	}

	public String user(String name, String bm, String currentpage,
			String totalnum) {
		String sql = "select * from (select c.id,c.username,c.loginname,c.password,v.bm,v.parent,v.code,t.gw,rownum r from tb_gw t, tuser c, tb_bm v where v.bm like '%"+bm+"%' and c.username like '%"+name+"%' and c.bm = v.code and t.id = c.gw) tt where tt.r<="+ (Integer.parseInt(currentpage) * Integer.parseInt(totalnum)) + " and tt.r>="+(Integer.parseInt(currentpage) - 1) * Integer.parseInt(totalnum);
		String sql2= "select count(*) count from tb_gw t, tuser c, tb_bm v where  v.bm like '%"+bm+"%' and c.username like '%"+name+"%' and c.bm = v.code and t.id = c.gw";
		System.out.println(sql);
		System.out.println(sql2);
		List<Map<String, Object>> list = jdbcTemplate.queryForList(sql);
		List<Map<String, Object>> list2 = jdbcTemplate.queryForList(sql2);
		List<Object> newList = new ArrayList<Object>();
		for(int i=0;i<list.size();i++){
			Map<String, Object> map1 = list.get(i);
			if(list.get(i).get("parent")==null){
				map1.put("PARENT", list.get(i).get("code").toString());
			}
			newList.add(map1);
		}
		Map<String, Object> m = new HashMap<String, Object>();
		m.put("datas", newList);
		m.put("count", list2.get(0).get("count"));
		System.out.println(m);
		return jacksonUtil.toJson(m);
	}

	public int useraddsave(String xm, String zh, String mm, String gw, String bm) {
		String sql = "insert into tuser (username,loginname,password,permission,bm,gw) values ('"+xm+"','"+zh+"','"+mm+"',1,'"+bm+"','"+gw+"')";
		System.out.println(sql);
		int count=jdbcTemplate.update(sql);
		return count;
	}


	public String findqdsz() {
		String sql= "select t.*,t1.bm bmmc from tb_sz t,tb_bm t1 where t.bm=t1.code";
		List<Map<String, Object>> list = jdbcTemplate.queryForList(sql);
		for (int i = 0; i < list.size(); i++) {
			Map<String, Object> a = list.get(i);
			String sb = a.get("SBTIME").toString();
			String xb = a.get("XBTIME").toString();
			a.put("SBTIME", sb.substring(0, 2)+":"+sb.substring(2, 4))	;
			a.put("XBTIME", xb.substring(0, 2)+":"+xb.substring(2, 4))	;
		}
		return jacksonUtil.toJson(list);
	}

	public int userdel(String sj) {
		String[] id=sj.split(",");
		int count=0;
		for(int i=0;i<id.length;i++){
			String sql = "delete from tuser where id="+id[i];
			//			System.out.println(sql);
			count+=jdbcTemplate.update(sql);
		}
		return count;
	}

	public int usereditsave(String xm, String zh, String mm, String bm,
			String gw, String id) {
		String sql = "update tuser set username="+xm+", loginname="+zh+",password="+mm+",bm="+bm+" ,gw="+gw+" where id ="+id;
		//		System.out.println(sql);
		int count=jdbcTemplate.update(sql);
		return count;
	}

	public String bmgl(String bm, String currentpage, String totalnum) {
		String sql = "select * from (select t.id,t.bm,t.code,t.parent,rownum r from tb_bm t where t.bm like '%"+bm+"%' and t.parent is not null) tt where tt.r<="+ (Integer.parseInt(currentpage) * Integer.parseInt(totalnum)) + " and tt.r>="+(Integer.parseInt(currentpage) - 1) * Integer.parseInt(totalnum);
		String sql2= "select count(*) count from tb_bm t where  t.bm like '%"+bm+"%' and t.parent is not null";
		System.out.println(sql);
		System.out.println(sql2);
		List<Map<String, Object>> list = jdbcTemplate.queryForList(sql);
		List<Map<String, Object>> list2 = jdbcTemplate.queryForList(sql2);
		List<Object> newList = new ArrayList<Object>();
		for(int i=0;i<list.size();i++){
			Map<String, Object> map = list.get(i);
			String sql1= "select * from tb_bm where code ="+list.get(i).get("PARENT");
			List<Map<String, Object>> list1 = jdbcTemplate.queryForList(sql1);
			for(int j=0;j<list1.size();j++){
				map.put("SJBM", list1.get(j).get("BM"));
				newList.add(map);
			}
		}
		Map<String, Object> m = new HashMap<String, Object>();
		m.put("datas", newList);
		m.put("count", list2.get(0).get("count"));
		System.out.println(m);
		return jacksonUtil.toJson(m);
	}

	public int bmgladdsave(String bm, String parent) {
		String sql = "insert into TB_bm (bm,parent) values ('"+bm+"','"+parent+"')";
		System.out.println(sql);
		int count=jdbcTemplate.update(sql);
		return count;
	}

	public int bmgldel(String sj) {
		String[] id=sj.split(",");
		int count=0;
		for(int i=0;i<id.length;i++){
			String sql = "delete from tb_bm where id="+id[i];
			//			System.out.println(sql);
			count+=jdbcTemplate.update(sql);
		}
		return count;
	}

	public int bmgleditsave(String bm, String id, String sjid) {
		String sql = "update tb_bm set bm='"+bm+"', parent="+sjid+" where id ="+id;
		System.out.println(sql);
		int count=jdbcTemplate.update(sql);
		return count;
	}

	public String qdtj(String name, String bm, String stime, String etime,
			String currentpage, String totalnum) {

		String sql = "select * from (select ts.*,rownum r,m.bm from (select tin.username,tin.qddz,tin.qdtime,tout.qtdz,tout.qttime from "
				+ "(select * from tb_signin t where  t.username in (select u.username from tuser u where u.username like '%"+name+"%' and u.bm in (select t.code from tb_bm t where t.bm like '%"+bm+"%'))"
				+ ") tin left join tb_signout tout on tin.yeartime=tout.yeartime and tin.username=tout.username "
				+ "and tin.qdtime>=to_date('"+stime+"','yyyy-mm-dd') and tin.qdtime<=to_date('"+stime+"','yyyy-mm-dd') "
				+ "order by tin.username,tin.qdtime desc)ts ,tb_bm m,tuser y where ts.username=y.username and y.bm=m.code)tt where tt.r<="+ (Integer.parseInt(currentpage) * Integer.parseInt(totalnum)) + " and tt.r>="+(Integer.parseInt(currentpage) - 1) * Integer.parseInt(totalnum);
		String sql2="select count(*) c from "
				+ "(select * from tb_signin t where  t.username in (select u.username from tuser u where u.username like '%"+name+"%' and u.bm in (select t.code from tb_bm t where t.bm like '%"+bm+"%'))"
				+ ") tin left join tb_signout tout on tin.yeartime=tout.yeartime and tin.username=tout.username "
				+ "and tin.qdtime>=to_date('"+stime+"','yyyy-mm-dd') and tin.qdtime<=to_date('"+stime+"','yyyy-mm-dd') "
				+ "order by tin.username,tin.qdtime";
		List<Map<String, Object>> list = jdbcTemplate.queryForList(sql);
		List<Map<String, Object>> list2 = jdbcTemplate.queryForList(sql2);

		String sqluser = "select u.username from tuser u,tb_bm t where u.bm=t.code and u.username like '%"+name+"%' and t.bm like '%"+bm+"%'";
		List<Map<String, Object>> userlist = jdbcTemplate.queryForList(sqluser);
		for (int i = 0; i < userlist.size(); i++) {
			String username = userlist.get(i).get("USERNAME").toString();
			userlist.get(i).put("qdcs", qdcxcount(username,stime,etime));
			userlist.get(i).put("qjcs", qjcxcount(username,stime,etime));
			userlist.get(i).put("wqcs", wqcxcount(username,stime,etime));
		}

		Map<String, Object> m = new HashMap<String, Object>();
		m.put("datas", list);
		m.put("count", list2.get(0).get("c"));
		m.put("tsj", userlist);
		return jacksonUtil.toJson(m);
	}

	public String qjcx(String name, String bm, String stime, String etime,
			String currentpage, String totalnum) {

		String sql = "select * from (select t.id,t.qjkstime,t.qjjstime,t.spuser,t.username,m.bm,t.qjnr,t.qjtype,t.sqjg,rownum r "
				+ "from tb_qjsc t,tuser u,tb_bm m "
				+ "where t.username=u.username and u.bm=m.code and t.username like '%"+name+"%' "
				+ " and t.qjkstime>=to_date('"+stime+"','yyyy-mm-dd') and t.qjjstime<=to_date('"+etime+"','yyyy-mm-dd') "
				+ " and m.bm like '%"+bm+"%' order by t.qjkstime)tt where tt.r<="+ (Integer.parseInt(currentpage) * Integer.parseInt(totalnum)) + " and tt.r>="+(Integer.parseInt(currentpage) - 1) * Integer.parseInt(totalnum);
		String sql2="select count(*) c "
				+ "from tb_qjsc t,tuser u,tb_bm m "
				+ "where t.username=u.username and u.bm=m.code and t.username like '%"+name+"%' "
				+ " and t.qjkstime>=to_date('"+stime+"','yyyy-mm-dd') and t.qjjstime<=to_date('"+etime+"','yyyy-mm-dd') "
				+ " and m.bm like '%"+bm+"%' order by t.qjkstime";
		List<Map<String, Object>> list = jdbcTemplate.queryForList(sql);
		List<Map<String, Object>> list2 = jdbcTemplate.queryForList(sql2);
		System.out.println(list);
		System.out.println(list2);
		Map<String, Object> m = new HashMap<String, Object>();
		m.put("datas", list);
		m.put("count", list2.get(0).get("c"));
		System.out.println(m);
		return jacksonUtil.toJson(m);
	}
	public int qjcxadd(
			String name,
			String spuser,
			String userid,
			String kstime,
			String jstime,
			String qjly,
			String qjlx,
			String qjjg,
			String qjsc
			) {
		SimpleDateFormat sdf=new SimpleDateFormat("yyyyMMddHHmmss");
		String qjid=sdf.format(new Date());
String sql = "insert into TB_qjsc (qjid,username,spuser,userid,qjkstime,qjjstime,qjnr,qjtype,sqjg,qjsc) values ('"+qjid+"','"+name+"','"+spuser+"','"+userid+"',to_date('"+kstime+"','YYYY-MM-dd hh24:mi:ss'),to_date('"+jstime+"','YYYY-MM-dd hh24:mi:ss'),'"+qjly+"','"+qjlx+"','"+Integer.parseInt(qjjg)+"','"+Integer.parseInt(qjsc)+"')";
		System.out.println(sql);
		int count=jdbcTemplate.update(sql);
		return count;
	}
	public int qjcxdel(String sj) {
		String[] id=sj.split(",");
		int count=0;
		for(int i=0;i<id.length;i++){
			String sql = "delete from tb_qjsc where id="+id[i];
				//System.out.println(sql);
			count+=jdbcTemplate.update(sql);
		}
		return count;

	}

	public int qjcxeditsave(
			String name,
			String spuser,
			String userid,
			String kstime,
			String jstime,
			String qjly,
			String qjlx,
			String qjjg,
			String qjsc,
			String id
			) {
		
//		SimpleDateFormat asd = new SimpleDateFormat("yyyMMddHHmmss");
//		asd.format(new Date());
		String sql = "update tb_qjsc set username='"+name+"',spuser='"+spuser+"',userid='"+userid+"',qjkstime=to_date('"+kstime+"','YYYY-MM-dd hh24:mi:ss'),qjjstime=to_date('"+jstime+"','YYYY-MM-dd hh24:mi:ss'),qjnr='"+qjly+"',qjtype='"+qjlx+"',sqjg='"+Integer.parseInt(qjjg)+"',qjsc='"+Integer.parseInt(qjsc)+"' where id ='"+id+"'";
		System.out.println(sql);
		int count=jdbcTemplate.update(sql);
		return count;
	}


	public String wqcx(String name, String bm, String stime, String etime,
			String currentpage, String totalnum) {

		String sql = "select * from (select t.id,t.bgdz,t.bgtime,t.bgnr,t.sqjg, t.spuser,t.username,m.bm,rownum r "
				+ "from tb_wqbgsc t,tuser u,tb_bm m where "
				+ "t.username=u.username and u.bm=m.code and t.username like '%"+name+"%' "
				+ " and t.bgtime>=to_date('"+stime+"','yyyy-MM-dd') and t.bgtime<=to_date('"+etime+"','yyyy-MM-dd') "
				+ " and m.bm like '%"+bm+"%' order by t.bgtime)tt where tt.r<="+ (Integer.parseInt(currentpage) * Integer.parseInt(totalnum)) + " and tt.r>="+(Integer.parseInt(currentpage) - 1) * Integer.parseInt(totalnum);
		String sql2="select count(*) c "
				+ "from tb_wqbgsc t,tuser u,tb_bm m where "
				+ "t.username=u.username and u.bm=m.code and t.username like '%%' "
				+ " and t.bgtime>=to_date('"+stime+"','yyyy-MM-dd') and t.bgtime<=to_date('"+etime+"','yyyy-MM-dd') "
				+ " and m.bm like '%"+bm+"%' order by t.bgtime";
		List<Map<String, Object>> list = jdbcTemplate.queryForList(sql);
		List<Map<String, Object>> list2 = jdbcTemplate.queryForList(sql2);
		Map<String, Object> m = new HashMap<String, Object>();
		m.put("datas", list);
		m.put("count", list2.get(0).get("c"));
		return jacksonUtil.toJson(m);
	}

	public int wqcxadd(
			String username,
			String spuser,
			String userid,
			String time,
			String address,
			String content,
			String spjg
			) {
		SimpleDateFormat sdf=new SimpleDateFormat("yyyyMMddHHmmss");
		String bgid=sdf.format(new Date());
		String sql = "insert into TB_WQBGSC (bgid,username,spuser,userid,bgtime,bgdz,bgnr,sqjg"
				+ ") values ('"+bgid+"','"+username+"','"+spuser+"','"+userid+"',to_date('"+time+"','YYYY-MM-dd hh24:mi:ss'),'"+address+"','"+content+"','"+Integer.parseInt(spjg)+"')";
		System.out.println(sql);
		int count=jdbcTemplate.update(sql);
		return count;
	}
	public int wqcxdel(String sj) {
		String[] id=sj.split(",");
		int count=0;
		for(int i=0;i<id.length;i++){
			String sql = "delete from tb_wqbgsc where id="+id[i];
			System.out.println(sql);
			count+=jdbcTemplate.update(sql);
		}
		return count;

	}
	public int wqcxeditsave(
			String username,
			String spuser,
			String userid,
			String time,
			String address,
			String content,
			String spjg,
			String id
			) {
		String sql = "update tb_wqbgsc set username='"+username+"',spuser='"+spuser+"',userid='"+userid+"',bgdz='"+address+"',bgtime=to_date('"+time+"','yyyy-MM-dd hh24:mi:ss'),bgnr='"+content+"',sqjg='"+Integer.parseInt(spjg)+"' where id ='"+id+"'";
		System.out.println(sql);
		int count=jdbcTemplate.update(sql);
		return count;
	}

	public String qdcxcount(String name, String stime, String etime) {
		String sql2="select count(*) c from (select * from tb_signin t where t.username  like '%"+name+"%') tin  left join tb_signout tout "
				+ "on tin.yeartime=tout.yeartime and tin.username=tout.username "
				+ "and tin.qdtime>=to_date('"+stime+"','yyyy-mm-dd') and tin.qdtime<=to_date('"+etime+"','yyyy-mm-dd') ";
		List<Map<String, Object>> list2 = jdbcTemplate.queryForList(sql2);
		return list2.get(0).get("c").toString();
	}

	public String qjcxcount(String name, String stime, String etime) {
		String sql2="select count(*) c "
				+ "from tb_qjsc t "
				+ "where t.username like '%"+name+"%' "
				+ " and t.qjkstime>=to_date('"+stime+"','yyyy-mm-dd') and t.qjkstime<=to_date('"+etime+"','yyyy-mm-dd') ";
		List<Map<String, Object>> list2 = jdbcTemplate.queryForList(sql2);
		return list2.get(0).get("c").toString();
	}

	public String wqcxcount(String name, String stime, String etime) {
		String sql2="select count(*) c "
				+ "from tb_wqbgsc t where "
				+ "t.username like '%"+name+"%' "
				+ " and t.bgtime>=to_date('"+stime+"','yyyy-mm-dd') and t.bgtime<=to_date('"+etime+"','yyyy-mm-dd') ";
		List<Map<String, Object>> list2 = jdbcTemplate.queryForList(sql2);
		return list2.get(0).get("c").toString();
	}
	//加班查询
	public String jbcx(String name, String bm, String kstime, String jstime,
			String currentpage, String totalnum) {
		String sql = "select * from (select t.id,t.jbkstime,t.jbjstime,t.sqjg,t.spuser,t.jbnr,t.username,m.bm,rownum r "
				+ "from tb_jb t,tuser u,tb_bm m where "
				+ "t.username=u.username and u.bm=m.code and t.username like '%"+name+"%' "
				+ " and t.jbkstime>=to_date('"+kstime+"','yyyy-mm-dd') and t.jbjstime<=to_date('"+jstime+"','yyyy-mm-dd') "
				+ " and m.bm like '%"+bm+"%' order by t.jbkstime)tt where tt.r<="+ (Integer.parseInt(currentpage) * Integer.parseInt(totalnum)) + " and tt.r>="+(Integer.parseInt(currentpage) - 1) * Integer.parseInt(totalnum);
		String sql2="select count(*) c "
				+ "from tb_jb t,tuser u,tb_bm m where "
				+ "t.username=u.username and u.bm=m.code and t.username like '%%' "
				+ " and t.jbkstime>=to_date('"+kstime+"','yyyy-mm-dd') and t.jbjstime<=to_date('"+jstime+"','yyyy-mm-dd') "
				+ " and m.bm like '%"+bm+"%' order by t.jbkstime";
		System.out.println(sql);
		System.out.println(sql2);
		List<Map<String, Object>> list = jdbcTemplate.queryForList(sql);
		List<Map<String, Object>> list2 = jdbcTemplate.queryForList(sql2);
		Map<String, Object> m = new HashMap<String, Object>();
		m.put("datas", list);
		m.put("count", list2.get(0).get("c"));
		return jacksonUtil.toJson(m);
	}
	public int jbcxadd(
			String username,
			String spuser,
			String userid,
			String bm,
			String stime,
			String etime,
			String content,
			String sqjg,
			String jbsc
			) {
		SimpleDateFormat sdf=new SimpleDateFormat("yyyyMMddHHmmss");
		String jbid=sdf.format(new Date());
		String sql = "insert into TB_JB (jbid,username,spuser,userid,bm,jbkstime,jbjstime,jbnr,sqjg,jbsc"
				+ ") values ('"+jbid+"','"+username+"','"+spuser+"','"+userid+"','"+Integer.parseInt(bm)+"',to_date('"+stime+"','YYYY-MM-dd hh24:mi:ss'),to_date('"+etime+"','YYYY-MM-dd hh24:mi:ss'),'"+content+"','"+Integer.parseInt(sqjg)+"','"+Integer.parseInt(jbsc)+"')";
		System.out.println(sql);
		int count=jdbcTemplate.update(sql);
		return count;
	}
	public int jbcxdel(String sj) {
		String[] id=sj.split(",");
		int count=0;
		for(int i=0;i<id.length;i++){
			String sql = "delete from tb_jb where id="+id[i];
			System.out.println(sql);
			count+=jdbcTemplate.update(sql);
		}
		return count;

	}
	public int jbcxeditsave(
			String username,
			String spuser,
			String userid,
			String stime,
			String etime,
			String content,
			String sqjg,
			String jbsc,
			String id
			) {
		String sql = "update tb_jb set username='"+username+"',spuser='"+spuser+"',userid='"+userid+"',jbkstime=to_date('"+stime+"','yyyy-MM-dd hh24:mi:ss'),jbjstime=to_date('"+etime+"','yyyy-MM-dd hh24:mi:ss'),jbnr='"+content+"',sqjg='"+Integer.parseInt(sqjg)+"',jbsc='"+Integer.parseInt(jbsc)+"'where id ='"+id+"'";
		System.out.println(sql);
		int count=jdbcTemplate.update(sql);
		return count;
	}


	public String queryqj(String id) {
		String  sql="select t.qjkstime,t.qjjstime,t.spuser,t.qjnr,t.qjtype,t.sqjg,t.qjsc,u.username,u.userid from tb_qjsc t,tuser u where t.username=u.username AND t.id='"+id+"'";
		System.out.println(sql);
		List<Map<String, Object>> list = jdbcTemplate.queryForList(sql);
		Map<String, Object> m = new HashMap<String, Object>();
		m.put("datas", list);
		System.out.println(m);
		return jacksonUtil.toJson(m);
	}
	public String querywq(String id) {
		String  sql="select * from tb_wqbgsc where id='"+id+"'";
		System.out.println(sql);
		List<Map<String, Object>> list = jdbcTemplate.queryForList(sql);
		Map<String, Object> m = new HashMap<String, Object>();
		m.put("datas", list);
		System.out.println(m);
		return jacksonUtil.toJson(m);
	}
	public String queryjb(String id) {
		String  sql="select * from tb_jb where id='"+id+"'";
		System.out.println(sql);
		List<Map<String, Object>> list = jdbcTemplate.queryForList(sql);
		Map<String, Object> m = new HashMap<String, Object>();
		m.put("datas", list);
		System.out.println(m);
		return jacksonUtil.toJson(m);
	}
	public String selectname() {
		String sql = "select * from tuser";
		System.out.println(sql);
		List<Map<String, Object>> list = jdbcTemplate.queryForList(sql);
		Map<String, Object> m = new HashMap<String, Object>();
		m.put("datas", list);
		return jacksonUtil.toJson(m);
	}
//	public String selectwqname() {
//		String sql = "select u.username from TB_WQBGSC t,tuser u where t.username=u.username ";
//		System.out.println(sql);
//		List<Map<String, Object>> list = jdbcTemplate.queryForList(sql);
//		Map<String, Object> m = new HashMap<String, Object>();
//		m.put("datas", list);
//		System.out.println(list);
//		return jacksonUtil.toJson(m);
//	
//	}
	
}